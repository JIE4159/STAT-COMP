import numpy as np
import random
import math
from scipy.stats import chi2
import matplotlib.pyplot as plt

#define target distribution density
def target(x,sigma):
    if x<0 or sigma<0:
        return 0
    else:
        return ((x/sigma**2)*np.exp(-x**2/(2*sigma**2)))

m=10000
sigma=4
x=np.zeros(m)
x[0]=np.random.chisquare(1,1)
k=0
u=np.random.uniform(0,1,m)
for i in range(1,m):
    xt=x[i-1]
    y=np.random.chisquare(xt,1)
    num=target(y,sigma)*chi2.pdf(xt,y)
    den=target(xt,sigma)*chi2.pdf(y,xt)
    if u[i]<num/den:
        x[i]=y
    else:
        x[i]=xt
        k=k+1
print(k)
rejectrate=k/m
print('%s of the candidate points are rejected, the chain is somewhat inefficient with reject rate'%rejectrate)
##display partial part starting at time index 5000

index=list(range(6000,6500))
y1=x[index]
plt.plot(index,y1)

##compare the quantiles of target Rayleigh

b=6000
y2=x[b:m]
plt.hist(y2, 40,density=True)
xvar=np.linspace(0,15,100)
y3=(xvar/sigma**2)*np.exp(-xvar**2/(2*sigma**2))
plt.plot(xvar, y3)
