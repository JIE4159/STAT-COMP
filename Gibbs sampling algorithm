
#initialize constants and parameters
n=5000
burn=1000
XC=np.zeros((n,2))
rho=-0.75       #correlation 
mu1=0
mu2=2
sigma1=1
sigma2=0.5
s1=np.sqrt(1-rho**2)*sigma1
s2=np.sqrt(1-rho**2)*sigma2
#generate the chain
XC[0,:]=[mu1,mu2]
for i in range(1,n):
    x2=XC[i-1,1]
    m1=mu1+rho*(x2-mu2)*sigma1/sigma2
    XC[i,0]=np.random.normal(m1,s1,1)
    x1=XC[i,0]
    m2=mu2+rho*(x1-mu1)*sigma2/sigma1
    XC[i,1]=np.random.normal(m2,s2,1)
b=burn+1
x=XC[b:n,:]
##compare sample statistics to parameters
np.cov(x[:,0],x[:,1])
np.corrcoef(x[:,0],x[:,1])
x1=x[:,0]
x2=x[:,1]
plt.scatter(x1,x2,alpha=0.5)
plt.xlim(-4,4)
plt.ylim(0,4)
plt.xlabel("x1")
plt.ylabel("x2")
plt.title("Bivariate normal chain generated by Gibbs sampler")
